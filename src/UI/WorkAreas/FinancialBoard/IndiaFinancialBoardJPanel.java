/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.WorkAreas.FinancialBoard;

import Model.Travel;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.json.JSONObject;

/**
 *
 * @author samik
 */
public class IndiaFinancialBoardJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    double usdRate, inrRate, cnyRate, inrToUsd, inrToCny, inrToEur;
    Travel travel;

    /**
     * Creates new form IndiaFinancialBoardJPanel
     */
    IndiaFinancialBoardJPanel(JPanel userProcessContainer, Travel travel, String transportation_Board_Personnel) {
        this.userProcessContainer = userProcessContainer;
        initComponents();
        currencyConverter();
        this.travel = travel;
        txtForex.setText(Double.toString(travel.getForexFinance().getForexINR()));
        txtForex.setEnabled(false);
        btnSaveForex.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCny = new javax.swing.JTextField();
        btnCompute = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        txtUsd = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        txtEur = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        txtInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        optionsCur = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtOutput = new javax.swing.JTextField();
        lblForex = new javax.swing.JLabel();
        txtForex = new javax.swing.JTextField();
        btnUpdateForex = new javax.swing.JButton();
        btnSaveForex = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCny.setEditable(false);
        txtCny.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        add(txtCny, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 110, 40));

        btnCompute.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnCompute.setText("Compute");
        btnCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComputeActionPerformed(evt);
            }
        });
        add(btnCompute, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 320, 110, 50));

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jTextField4.setText("CNY");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 120, 40));

        txtUsd.setEditable(false);
        txtUsd.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        txtUsd.setToolTipText("");
        add(txtUsd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, 110, 40));

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jTextField5.setText("USD");
        add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, 120, 40));

        txtEur.setEditable(false);
        txtEur.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        add(txtEur, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 110, 40));

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jTextField6.setText("EUR");
        add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, 120, 40));

        txtInput.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        add(txtInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 130, 50));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("INR");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 330, -1, -1));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setText("Convert To");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, -1, -1));

        optionsCur.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        optionsCur.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CNY", "USD", "EUR" }));
        add(optionsCur, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 320, 100, 50));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setText("1 INR = ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, -1, -1));

        txtOutput.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        add(txtOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 320, 110, 50));

        lblForex.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        lblForex.setText("Forex Charge per INR converted:");
        add(lblForex, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, -1, -1));

        txtForex.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        add(txtForex, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 470, 120, 50));

        btnUpdateForex.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnUpdateForex.setText("Update");
        btnUpdateForex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateForexActionPerformed(evt);
            }
        });
        add(btnUpdateForex, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 470, -1, 50));

        btnSaveForex.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        btnSaveForex.setText("Save");
        btnSaveForex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveForexActionPerformed(evt);
            }
        });
        add(btnSaveForex, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 470, 80, 50));

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Currency Conversion:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("Global Currency Rate:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Forex:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("->");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 330, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("->");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComputeActionPerformed
        // TODO add your handling code here:
        int input = Integer.parseInt(txtInput.getText());
        String str = String.valueOf(optionsCur.getSelectedItem());
        if ("CNY".equals(str)) {
         double result = inrToCny * input;
txtOutput.setText(String.format("%.2f", result));
        } else if ("USD".equals(str)) {
            double result = inrToUsd * input;
            txtOutput.setText(String.format("%.2f", result));
        } else if ("EUR".equals(str)) {
            double result = inrToEur * input;
            txtOutput.setText(String.format("%.2f", result));
        }
    }//GEN-LAST:event_btnComputeActionPerformed

    private void btnUpdateForexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateForexActionPerformed
        // TODO add your handling code here:
        txtForex.setEnabled(true);
        btnSaveForex.setEnabled(true);
    }//GEN-LAST:event_btnUpdateForexActionPerformed

    private void btnSaveForexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveForexActionPerformed
        // TODO add your handling code here:
        if(txtForex.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please check if all fields are filled before processing", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            Double.valueOf(txtForex.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Value should be Integer!", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        travel.getForexFinance().setForexINR(Double.valueOf(txtForex.getText()));
        txtForex.setEnabled(false);
        btnSaveForex.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Forex charge updated successfuly!");

    }//GEN-LAST:event_btnSaveForexActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void currencyConverter() {
        try {
            // URL for the exchange rates API
            String apiUrl = "http://api.exchangeratesapi.io/v1/latest?access_key=64f496528f9b7c78ec53b499c3c7efa3&base=EUR&symbols=USD,INR,CNY";

            // Create a URL object
            URL url = new URL(apiUrl);

            // Create an HttpURLConnection
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            // Get the response code
            int responseCode = connection.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                // Reading the response
                BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                String inputLine;
                StringBuilder response = new StringBuilder();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                // Parse the JSON response
                JSONObject jsonResponse = new JSONObject(response.toString());

                // Extract rates
                usdRate = jsonResponse.getJSONObject("rates").getDouble("USD");
                inrRate = jsonResponse.getJSONObject("rates").getDouble("INR");
                cnyRate = jsonResponse.getJSONObject("rates").getDouble("CNY");

                // Calculate the values for 1 INR
                inrToUsd = usdRate / inrRate;
                inrToCny = cnyRate / inrRate;
                inrToEur = 1 / inrRate;  // Since the base is EUR, use USD rate for EUR conversion

                txtUsd.setText(String.format("%.4f", inrToUsd));
                txtCny.setText(String.format("%.4f", inrToCny));
                txtEur.setText(String.format("%.4f", inrToEur));

            } else {
                System.out.println("HTTP GET request failed with response code: " + responseCode);
            }

            // Close the connection
            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompute;
    private javax.swing.JButton btnSaveForex;
    private javax.swing.JButton btnUpdateForex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lblForex;
    private javax.swing.JComboBox<String> optionsCur;
    private javax.swing.JTextField txtCny;
    private javax.swing.JTextField txtEur;
    private javax.swing.JTextField txtForex;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtOutput;
    private javax.swing.JTextField txtUsd;
    // End of variables declaration//GEN-END:variables
}
